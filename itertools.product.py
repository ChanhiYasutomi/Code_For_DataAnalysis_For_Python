# このコードは、itertools.productを使用して2つのリストpとqから組み合わせを生成し、それを処理して新しいリストpdqを作成するものです。具体的な例を示します。
# import itertools

# 例として、pとqの値を指定
p = [1, 2]
q = [0, 1]

# pとqから組み合わせを生成し、pdqリストを作成
pdq = [(x[0], 1, x[1]) for x in list(itertools.product(p, q))]

# 結果を表示
print(pdq)

# この例では、pとqにそれぞれ2つの値を指定し、itertools.productを使用してそれらの値の組み合わせを生成します。itertools.productはpとqの要素同士の組み合わせを全て生成し、それをタプルの形式でpdqリストに格納します。
# 結果は次のようになります：
# [(1, 1, 0), (1, 1, 1), (2, 1, 0), (2, 1, 1)]
# これは、pの値とqの値の全ての組み合わせを持つpdqリストです。各要素はARIMAモデルの次数を表しており、このようにして異なる次数のモデルを生成するのに便利です。



# 3つのリストから組み合わせを生成する場合、itertools.productを使用して各リストの全ての組み合わせを生成することができます。以下は3つのリストから組み合わせを生成する具体的な例です。
import itertools

# 3つのリストを定義
p = [1, 2]
d = [0, 1]
q = [0, 1]

# 3つのリストから組み合わせを生成し、pdqリストを作成
pdq = list(itertools.product(p, d, q))

# 結果を表示
print(pdq)

# この例では、p、d、qの各リストから全ての組み合わせを生成し、pdqリストに格納しています。結果は以下のようになります：
# [(1, 0, 0), (1, 0, 1), (1, 1, 0), (1, 1, 1), (2, 0, 0), (2, 0, 1), (2, 1, 0), (2, 1, 1)]
# これにより、3つのリストからの全ての組み合わせが得られます。
