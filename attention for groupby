# (※要注意)
# 以下をIdと属性で分けている理由としてdataframe.groupby([['Id','attribute_1', 'attribute_2', 'attribute_3','attribute_n']])[columns].sum().reset_index()のようにgroubyをした時にnullの部分がまとめてグループ化されるため母数が現象する
# そのためIdと属性を分割している。
columns = ['2023-01', '2023-02', '2023-03', '2023-04', '2023-05', '2023-06', '2023-07', '2023-08', '2023-09', '2023-10', '2023-11', '2023-12']
only_id = dataframe.groupby(['Id'])[columns].sum().reset_index()
attribute = dataframe[['Id','attribute_1', 'attribute_2', 'attribute_3','attribute_n']].drop_duplicates()

user_based_result = pd.merge(only_id, attribute, how = 'inner',left_on='Id',right_on='Id')

# Group by null どうなる？
# GROUP BY 節にリストした列において、NULL 値を含む各行は単一グループに属します。 つまり、すべての NULL 値がまとめてグループ化されます。
# これにより母数のレコード数が減る現象が起きる(※要注意)
