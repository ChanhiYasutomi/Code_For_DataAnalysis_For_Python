# pivot_table は、Pandasライブラリで提供されているデータのピボット操作を行うための便利なメソッドです。これを使用すると、データフレーム内の情報を集計し、新しい表形式のデータを生成することができます。以下に、Pythonコードでpivot_tableを具体的な例と共に説明します。
# 例として、ある企業の売上データが含まれたデータフレームを考えてみましょう。データフレームには、日付、製品カテゴリ、売上金額が含まれています。

import pandas as pd

# サンプルのデータを作成
data = {
    'Date': ['2023-09-01', '2023-09-01', '2023-09-02', '2023-09-02', '2023-09-03'],
    'Category': ['A', 'B', 'A', 'B', 'A'],
    'Sales': [100, 150, 200, 120, 180]
}

df = pd.DataFrame(data)

# ピボットテーブルを作成
pivot_df = df.pivot_table(index='Date', values='Sales', aggfunc='sum')

# 上記のコードでは、以下のことが行われています。
# pivot_table メソッドを呼び出し、次のパラメータを指定しています：
# index='Date': ピボットテーブルの行インデックスとして 'Date' 列を指定します。
# values='Sales': 集計する値（売上）を 'Sales' 列から選択します。
# aggfunc='sum': 集計関数として 'sum'（合計）を指定します。
# このコードを実行すると、日付ごとの売上合計が含まれた新しいデータフレーム pivot_df が生成されます。出力は次のようになります：

#            Sales
# Date
# 2023-09-01    250
# 2023-09-02    320
# 2023-09-03    180

# このように、pivot_table を使用することで、データをピボットして集計することができます。この例では日付ごとの売上合計を集計しましたが、他の集計方法や異なる列を行・列に配置することも可能です。
