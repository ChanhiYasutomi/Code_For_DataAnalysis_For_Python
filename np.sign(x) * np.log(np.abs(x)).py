import numpy
# -----------------------------------
# 対数変換
# -----------------------------------
x = np.array([1.0, 10.0, 100.0, 1000.0, 10000.0])

# 単に対数をとる
x1 = np.log(x)
display(x1)

# 1を加えたあとに対数をとる
x2 = np.log1p(x)
display(x2)

# 絶対値の対数をとってから元の符号を付加する
x3 = np.sign(x) * np.log(np.abs(x))
display(x3)

# 提供されたコードは、NumPyを使用して数値データの対数変換を行う方法を示しています。対数変換は、データを非線形に変換し、特に正の値が広く分布している場合に役立ちます。以下は、提供されたコードの各セクションの説明です。
# x = np.array([1.0, 10.0, 100.0, 1000.0, 10000.0]): 対数変換を行うための元の数値データをNumPyの配列 x に格納します。
# x1 = np.log(x): np.log() 関数を使用して、x の各要素に自然対数を適用し、x1 に格納します。単純な対数変換です。
# x2 = np.log1p(x): np.log1p() 関数を使用して、x の各要素に1を加えた後に自然対数を適用し、x2 に格納します。この方法は、小さな値を持つデータに対して対数変換を行う際に役立ちます。np.log(1 + x) と同等です。
# x3 = np.sign(x) * np.log(np.abs(x)): np.sign() 関数を使用して各要素の符号を取得し、np.abs() 関数を使用して絶対値を取得した後、自然対数を適用し、元の符号を付加して、x3 に格納します。これにより、データ内の正と負の値の対数変換が行われます。
# これらの変換は、データの特性に応じて使用することができます。たとえば、データが広く分布している場合、対数変換によってデータの非線形性を軽減し、モデルの性能を向上させることができることがあります。
