import pandas as pd

# 1つ目のデータフレーム
data1 = {
    'A': ['A0', 'A1', 'A2', 'A3'],
    'B': ['B0', 'B1', 'B2', 'B3']
}
df1 = pd.DataFrame(data1)

# 2つ目のデータフレーム
data2 = {
    'C': ['C0', 'C1', 'C2', 'C3'],
    'D': ['D0', 'D1', 'D2', 'D3']
}
df2 = pd.DataFrame(data2)

# データフレームの結合
# キーをインデックスにして結合
result = df1.join(df2)

# 提供されたコードでは、2つのデータフレーム df1 と df2 をキーをインデックスにして結合しています。具体的には、df1 が左側に位置し、df2 が右側に位置し、それらをインデックスによって結合しています。以下は、提供されたコードによる結果です：

#     A   B   C   D
# 0  A0  B0  C0  D0
# 1  A1  B1  C1  D1
# 2  A2  B2  C2  D2
# 3  A3  B3  C3  D3

# この結果では、df1 と df2 のインデックスが一致しており、各行が正確に1つのインデックスに対応しています。したがって、この場合、インデックスをキーとしてデータフレームが結合されています。
# join() メソッドは、デフォルトでは左側のデータフレーム (df1 この場合) を基準として結合され、右側のデータフレーム (df2 この場合) が結合されます。キーをインデックスに指定することで、データフレーム間の結合を行います。



# str.join() メソッドは、指定された文字列をメソッドを呼び出した文字列の各要素（文字列の文字）の間に挿入して、新しい文字列を作成します。
# このメソッドは、リストやタプルなどの iterable（反復可能なオブジェクト）に対して使用されることが一般的です。以下に具体例を示します：
# join() メソッドの具体例

# リストの各要素を連結して新しい文字列を作成
my_list = ['apple', 'banana', 'cherry']
result_string = ', '.join(my_list)

# 結果を表示
print(result_string)

# 出力:
# 'apple, banana, cherry'
# この例では、my_list というリストの各要素を , （カンマとスペース）で連結して新しい文字列を作成しています。
# join() メソッドを使うことで、リスト内の要素を指定した文字列で区切って簡単に結合することができます。
# なお、str.join() メソッドは文字列型のメソッドであるため、リストなどの iterable が含む要素は文字列である必要があります。
