# np.insert は、NumPyライブラリを使用して、指定した位置に新しい要素を挿入するための関数です。この関数は、既存の配列に新しい要素を挿入して新しい配列を作成します。
# 以下に、np.insert の具体的な使い方を示す例を挙げて説明します。
import numpy as np

# サンプルのNumPy配列を作成
arr = np.array([1, 2, 3, 4, 5])

# 既存の配列 arr に新しい要素 99 を挿入
new_arr = np.insert(arr, 2, 99)

print("新しい配列:", new_arr)

# このコードでは、まず arr というNumPy配列を作成し、その中に [1, 2, 3, 4, 5] という要素が含まれています。次に、np.insert を使用して、arr のインデックス2の位置に新しい要素 99 を挿入しています。
# 実行結果は以下の通りです：

# 新しい配列: [ 1  2 99  3  4  5]
# 新しい要素 99 がインデックス2に挿入され、新しい配列 new_arr が生成されました。

# np.insert の基本的な構文は次の通りです：
# np.insert(array, obj, values, axis=None)
# array: 要素を挿入する対象の配列。
# obj: 要素を挿入する位置を示す整数または整数のリスト。単一の整数を指定すると、その位置に要素が挿入されます。
# values: 挿入する要素または要素のリスト。
# axis: 挿入操作の軸。通常は None で、1次元配列に要素を挿入します。多次元の場合、挿入操作を実行する軸を指定します。
